// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@index([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  firstName     String?   // Имя клиента
  lastName      String?   // Фамилия клиента
  role          String    @default("user") // Роль пользователя: admin или user
  accounts      Account[]
  sessions      Session[]
  certificates  Certificate[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@index([identifier, token])
}

model File {
  id                    String  @id @default(auto()) @map("_id") @db.ObjectId
  name                  String
  type                  String
  size                  String
  link                  String
  smilePhotoCertificates Certificate[] @relation("CertificateSmilePhoto")
  digitalCopyCertificates Certificate[] @relation("CertificateDigitalCopy")
}

model Certificate {
  id                    String   @id @default(auto()) @map("_id") @db.ObjectId
  title                 String   // Название (публично)
  installationDate      DateTime      // Дата установки в UNIX формате (приватно)
  userId                String   @db.ObjectId
  user                  User     @relation(fields: [userId], references: [id])
  smilePhotoId          String   @db.ObjectId
  smilePhoto            File     @relation("CertificateSmilePhoto", fields: [smilePhotoId], references: [id])
  digitalCopyId         String   @db.ObjectId
  digitalCopy           File     @relation("CertificateDigitalCopy", fields: [digitalCopyId], references: [id])
  doctorFirstName       String   // Имя врача (публично)
  doctorLastName        String   // Фамилия врача (публично)
  clinicName            String   // Название клиники (публично)
  clinicCity            String   // Город клиники (публично)
  technicianFirstName   String   // Имя техника (приватно)
  technicianLastName    String   // Фамилия техника (приватно)
  materialType          String   // Тип материала изготовления (приватно)
  materialColor         String   // Цвет материала изготовления (приватно)
  fixationType          String   // Тип материала фиксации (приватно)
  fixationColor         String   // Цвет материала фиксации (приватно)
  dentalFormula         Json     // Зубная формула - словарь из словаря массива строк (приватно)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

